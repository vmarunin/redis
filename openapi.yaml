openapi: 3.0.0
info:
  version: 0.1.0
  title: My awful Redis
  license:
    name: MIT
servers:
  - url: http://localhost:8080/redis/v1
paths:
  /key/{key}:
    summary: Operations with key
    description: GET, SET, DEL
    get:
      summary: Get value by key
      description: GET command in Redis
      operationId: get
      parameters:
        - name: key
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          $ref: "#/components/responses/Value"
        default:
          description: Unexpected error
    put:
      summary: Set value by key
      description: SET command in Redis
      operationId: set
      parameters:
        - name: key
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        description: Value to store
        content: 
          'application/json':
            schema:
              type: object
              properties:
                value:
                  type: string
                ttl:
                  type: integer
      responses:
        '200':
          $ref: "#/components/responses/Value"
        default:
          description: Unexpected error
    delete:
      summary: Delete key
      description: DEL command in Redis
      operationId: del
      parameters:
        - name: key
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          $ref: "#/components/responses/Value"
        default:
          description: Unexpected error
  /keys:
    get:
      summary: List keys (KEYS in Redis)
      operationId: keys
      parameters:
        - name: pattern
          in: query
          description: Pattern for key matching
          required: false
          schema:
            type: string
      responses:
        '200':
          $ref: "#/components/responses/ListOfStrings"
        default:
          description: unexpected error

components:
  responses:
    Value:
      description: "One value response (current or old)"
      content:
        application/json:
          schema:
            type: object
            properties:
              value:
                type: string
              found:
                type: boolean
    ListOfStrings:
      description: "List of strings"
      content:
        application/json:
          schema:
            type: array
            items:
              type: string  